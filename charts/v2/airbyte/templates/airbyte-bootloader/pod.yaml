---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-airbyte-bootloader
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
    {{- if .Values.airbyteBootloader.extraLabels }}
    {{ toYaml (mergeOverwrite .Values.airbyteBootloader.extraLabels .Values.global.extraLabels) | nindent 4 }}
    {{- end }}
    {{- if .Values.airbyteBootloader.podLabels}}
      {{- include "common.tplvalues.render" (dict "value" .Values.airbyteBootloader.podLabels "context" $) | nindent 4 }}
    {{- end }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "0"
    {{- if .Values.airbyteBootloader.podAnnotations }}
      {{- include "common.tplvalues.render" (dict "value" .Values.airbyteBootloader.podAnnotations "context" $) | nindent 4 }}
    {{- end }}
spec:
  serviceAccountName: {{ .Values.global.serviceAccountName }}
  {{- if .Values.global.imagePullSecrets }}
  imagePullSecrets:
    {{- range .Values.global.imagePullSecrets }}
      {{- printf "- name: %s" .name | nindent 2 }}
    {{- end }}
  {{- end }}
  restartPolicy: Never
  {{- if .Values.airbyteBootloader.nodeSelector }}
  nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.airbyteBootloader.nodeSelector "context" $) | nindent 4 }}
  {{- end }}
  {{- if .Values.airbyteBootloader.tolerations }}
  tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.airbyteBootloader.tolerations "context" $) | nindent 4 }}
  {{- end }}
  {{- if .Values.airbyteBootloader.affinity }}
  affinity: {{- include "common.tplvalues.render" (dict "value" .Values.airbyteBootloader.affinity "context" $) | nindent 4 }}
  {{- end }}
  {{- if .Values.airbyteBootloader.extraInitContainers }}
  initContainers:
  {{- toYaml .Values.airbyteBootloader.extraInitContainers | nindent 4 }}
  {{- end }}
  containers:
    - name: airbyte-bootloader-container
      image: {{ include "imageUrl" (list .Values.airbyteBootloader.image $) }}
      imagePullPolicy: "{{ .Values.airbyteBootloader.image.pullPolicy }}"
      env:
        {{- if eq .Values.global.deploymentMode "oss"  }}
        - name: AIRBYTE_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName | default (printf "%s-airbyte-env" .Release.Name) }}
              key: AIRBYTE_VERSION
        - name: RUN_DATABASE_MIGRATION_ON_STARTUP
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.global.configMapName | default (printf "%s-airbyte-env" .Release.Name) }}
              key: RUN_DATABASE_MIGRATION_ON_STARTUP

        # Airbyte auth secret keys and values
        {{- if and (eq .Values.global.edition "community") .Values.global.auth.enabled }}
        - name: AB_AUTH_SECRET_CREATION_ENABLED
          value: "true"
        - name: AB_KUBERNETES_SECRET_NAME
          value: {{ .Values.global.auth.secretName | default "airbyte-auth-secrets" | quote }}
        - name: AB_INSTANCE_ADMIN_PASSWORD_SECRET_KEY
          value: {{ .Values.global.auth.instanceAdmin.passwordSecretKey | default "instance-admin-password" | quote }}
        - name: AB_INSTANCE_ADMIN_CLIENT_ID_SECRET_KEY
          value: {{ .Values.global.auth.instanceAdmin.clientIdSecretKey | default "instance-admin-client-id" | quote }}
        - name: AB_INSTANCE_ADMIN_CLIENT_SECRET_SECRET_KEY
          value: {{ .Values.global.auth.instanceAdmin.clientSecretSecretKey | default "instance-admin-client-secret" | quote }}
        - name: AB_JWT_SIGNATURE_SECRET_KEY
          value: {{ .Values.global.auth.jwtSignatureSecretKey | default "jwt-signature-secret" | quote }}
        - name: AB_INSTANCE_ADMIN_PASSWORD
          value: {{ .Values.global.auth.instanceAdmin.password | quote }}
        - name: AB_INSTANCE_ADMIN_CLIENT_ID
          value: {{ .Values.global.auth.instanceAdmin.clientId | quote }}
        - name: AB_INSTANCE_ADMIN_CLIENT_SECRET
          value: {{ .Values.global.auth.instanceAdmin.clientSecret | quote }}
        - name: AB_JWT_SIGNATURE_SECRET
          value: {{ .Values.global.auth.jwtSignatureSecret | quote }}
        {{- end }}

        {{- include "airbyte.database.envs" . | nindent 8 }}

        {{- end }}
        # Values from secret
        {{- if .Values.airbyteBootloader.secrets }}
        {{- range $k, $v := .Values.airbyteBootloader.secrets }}
        - name: {{ $k }}
          valueFrom:
            secretKeyRef:
              name: bootloader-secrets
              key: {{ $k }}
        {{- end }}
        {{- end }}

        # Values from env
        {{- if or .Values.airbyteBootloader.env_vars .Values.global.env_vars }}
        {{- range $k, $v := mergeOverwrite .Values.airbyteBootloader.env_vars .Values.global.env_vars }}
        - name: {{ $k }}
          value: {{ $v | quote }}
        {{- end }}
        {{- end }}

        # Values from extraEnv for more compability(if you want to use external secret source or other stuff)
        {{- if .Values.airbyteBootloader.extraEnv }}
        {{- toYaml .Values.airbyteBootloader.extraEnv | nindent 8 }}
        {{- end }}

      {{- if .Values.airbyteBootloader.resources }}
      resources: {{- toYaml .Values.airbyteBootloader.resources | nindent 8 }}
      {{- end }}
      {{- if .Values.airbyteBootloader.extraVolumeMount }}
      volumeMounts:
        {{- toYaml .Values.airbyteBootloader.extraVolumeMounts | nindent 8 }}
      {{- end }}
      {{- if .Values.airbyteBootloader.containerSecurityContext }}
      securityContext: {{- toYaml .Values.airbyteBootloader.containerSecurityContext | nindent 8 }}
      {{- end }}
    {{- if .Values.airbyteBootloader.extraContainers }}
    {{ toYaml .Values.airbyteBootloader.extraContainers | nindent 4 }}
    {{- end }}
    {{- if .Values.global.extraContainers }}
    {{ toYaml .Values.global.extraContainers | nindent 4 }}
    {{- end }}
  securityContext: {{- toYaml .Values.airbyteBootloader.podSecurityContext | nindent 4 }}
  {{- if .Values.airbyteBootloader.extraVolumes }}
  volumes:
    {{- toYaml .Values.airbyteBootloader.extraVolumes | nindent 4 }}
  {{- end }}
